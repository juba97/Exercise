/*
    მოცემულია რიცხვი, ავღწეროთ ცვლადი even. თუ მოცემული რიცხვი ლუწია აღწერილი ცვლადში ჩავწეროთ 0 თუ არა და 1
*/

{
    int a;
    int even;
    
    a = 2
    even = a % 2
}

/*
    მოცემულია მთელი დადებითი რიცხვი n. 
    result ცვლადში მოვათავსოთ მოცემული რიცხვის შემდეგ მდგომი ლუწი რიცხვი

       Examples:
       Input        |   Output
           2        |   4
       Input        |   Output
           7        |   8
*/   

{
    int number;
    int remainder;
    int result;
    
    number = 2;
    
    remainder = number % 2;
    result = (number - remainder) + 2;
}

/*
    N მოსწავლე იყოფს K ვაშლს თანაბრად. მორჩენილი ვაშლები რჩება ისევ კალათაში.
    რამდენი ვაშლი დარჩება კალათაში?

    Input Data
    პროგრამა იღებს ორ მთელ რიცხვს N და K
    Output Data
    აღვწეროთ ცვლადი result და მოვათავსოთ ვაშლების რაოდენოა

    Examples:
    Input           |   Output
        3 14        |   2
*/

{
    int n; 
    int k; 
    int result;

    n = 3;
    k = 14;

    result = k % n;
}

/*
    N მოსწავლე იყოფს K ვაშლს თანაბრად. მორჩენილი ვაშლები რჩება ისევ კალათაში.
    რამდენი ვაშლი შეხვდება თითოეულ მოსწავლეს?

    Input Data
    პროგრამა იღებს ორ მთელ რიცხვს N და K
    Output Data
    აღვწეროთ ცვლადი result და მოვათავსოთ ვაშლების რაოდენოა

    Examples:
    Input           |   Output
        3 14        |   4

*/   

{
    int n;
    int k;
    int result;

    k = 14;
    n = 3;

    result = k / n;  
}

/*
     მოცემულია 3 ნიშნა რიცხვი. გამოვყოთ მისი ათეულების ციფრი.
     Examples:
     Input          |   Output
        127         |   2
*/

{
    int a;
    int result;

    a = 123;

    result = a / 10 % 10;
}

/*
    მოცემულია 4 ნიშნა რიცხვი. დავთვალოთ მისი ციფრების ჯამი.
    Examples:
    Input           |   Output
        1234        |   10
*/

{
    int n;   
    int a;
    int b;
    int c;
    int d;
    int result;

    n = 1234;

    a = n % 10; // 4
    b = n % 100 / 10; // 3
    c = n % 1000 / 100; // 2
    d = n / 1000; // 1
    result = a + b + c + d; 
}

/*
      მოცემულია 4 ნიშნა რიცხვი. დავთვალოთ მისი ლუწი ციფრების ჯამი.
      Examples:
      Input         |   Output
           1234     |   6
*/

{
    <Code>
}


/*
   1. მოცემულია 2 რიცხვი ვიპოვოთ მაქსიმუმი.
*/

{
   <code>
}

/*
    2. მოცემულია რიცხვი. თუ ეს რიცხვი ლუწია ცვლადში ჩავწეროთ 1 თუ კენტია ჩავწეროთ 0
*/

{
    int n;
    int k;
    int result;

    n = 6;

    k = n % 2;
    result = (k + 1) % 2;
}

/*
   3. N მოსწავლე იყოფს K ვაშლს თანაბრად, 
   ისე რომ ვაშლების რაოდენობა რომელიც 2 მოსწავლეს შეხვდა 1-ზე მეტით არ განსხვავდებოდეს.
    Input Data
        პროგრამა იღებს ორ მთელ რიცხვს N და K
    Output Data
        აღვწეროთ ცვლადი result და მოვათავსოთ მოსწავლეების რაოდენობა,
        რომლებსაც შეხვდათ ნაკლები ვაშლი ვიდრე მათ კლასელებს.
     Examples:
       Input        |   Output
        7 30        |   5
       Input        |   Output
        7 28        |   0
*/

{
    int N;
    int K;
    int R;

    int result;

    N = 7;
    K = 30;

    R = K % N;
    result = (N - R) % N; 
}

/*
   4. მოცემულია 2 ნატურალური რიცხვი n და m. თუ ერთი იყოფა მეორეზე მთელად,
    გამოვიტანოთ 1 თუ არა და ნებისმიერი სხვა რიცხვი
    Input Data
        მოცემულია ორი ნატურალური რიცხვი n და m.
    Output Data
        მოვათავსოთ result ცვლადში ამოცანის შედეგი
    Examples:
       Input        |   Output
        2 8         |   1
       Input        |   Output
        8 2         |   1
*/

{
    int n;
    int m;
    int result;

    n = 2;
    m = 8;

    result = (n / m) % 2 + 1;
}
